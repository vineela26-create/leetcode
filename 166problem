class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        if (denominator == 0) return "Undefined";
        if (numerator == 0) return "0";

        StringBuilder sb = new StringBuilder();
        
        if ((numerator < 0) ^ (denominator < 0)) sb.append("-");
        long num = Math.abs((long) numerator);
        long den = Math.abs((long) denominator);


        sb.append(num / den);
        long remainder = num % den;
        if (remainder == 0) return sb.toString();

        sb.append(".");
        Map<Long, Integer> map = new HashMap<>();
        StringBuilder decimals = new StringBuilder();

        while (remainder != 0) {
            if (map.containsKey(remainder)) {
                int pos = map.get(remainder);
                decimals.insert(pos, "(");
                decimals.append(")");
                break;
            }
            map.put(remainder, decimals.length());
            remainder *= 10;
            long digit = remainder / den;
            decimals.append(digit);
            remainder %= den;
        }

        sb.append(decimals.toString());
        return sb.toString();
    


    }
}
